<?php

$root_dir   = dirname( __DIR__ );

define( 'ROOT_DIR', $root_dir );
define( 'PUBLIC_DIR', $root_dir . '/public' );
define( 'CONFIG_DIR', $root_dir . '/config' );
define( 'SRC_DIR', $root_dir . '/src' );


/*
 * Configuration files
 */
$config_wp = 'wp.php';
$config_db = 'db.php';
$config_keys = 'keys.php';

if ( ! file_exists( CONFIG_DIR . '/' . $config_wp ) ) {
    die( 'Missing wp config file: create the <i>' . $config_wp . '</i> file' );
}

if ( ! file_exists( CONFIG_DIR . '/' . $config_db ) ) {
    die( 'Missing project config file: create the <i>' . $config_db . '</i> file' );
}

if ( ! file_exists( CONFIG_DIR . '/' . $config_keys ) ) {

	$secret_keys_url = 'https://api.wordpress.org/secret-key/1.1/salt/';

	$ch = curl_init();
	curl_setopt($ch, CURLOPT_URL, $secret_keys_url );
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	$secret_keys_content = curl_exec($ch);
	curl_close($ch);

	if ( ! file_put_contents( CONFIG_DIR . '/' . $config_keys, "<?php\n" . $secret_keys_content ) ) {
    	die( 'Cannot create file ' . $config_keys . ': generate keys at <a href="' . $secret_keys_url . '" target="_blank">' . $secret_keys_url . '</a>' );
	}

}

require_once( CONFIG_DIR . '/' . $config_wp );
require_once( CONFIG_DIR . '/' . $config_db );
include_once( CONFIG_DIR . '/' . $config_keys ); // Generate keys here: https://api.wordpress.org/secret-key/1.1/salt/


/*
 * Composer
 */
if ( ! file_exists( ROOT_DIR . '/vendor/autoload.php' ) ) {
    die( 'Missing Composer autoloader: run <i>composer install</i>' );
}

require_once( ROOT_DIR . '/vendor/autoload.php' ); // Composer


/*
 * Table Prefix
 */
if ( ! defined( 'DB_PREFIX' ) ) {
	define( 'DB_PREFIX', 'wp_' );
}

$table_prefix = DB_PREFIX;


/*
 * Server data
 */
$server_name = isset ( $_SERVER['SERVER_NAME'] ) ? $_SERVER['SERVER_NAME'] : '';
$server_port = isset ( $_SERVER['SERVER_PORT'] ) ? $_SERVER['SERVER_PORT'] : '';

define( 'WP_PORT', ($server_port == 80 || $server_port == 443) ? '' : ':' . $server_port );
define( 'WP_PROTOCOL', ($server_port == 443) ? 'https://' : 'http://' );
define( 'WP_DOMAIN', WP_PROTOCOL . $server_name . WP_PORT );

define( 'WP_HOME', WP_DOMAIN . '/' );
define( 'WP_SITEURL', WP_DOMAIN . '/core' );
define( 'CONTENT_DIR', '/app' );
define( 'WP_CONTENT_DIR', PUBLIC_DIR . CONTENT_DIR );
define( 'WP_CONTENT_URL', WP_DOMAIN . CONTENT_DIR );
define( 'UPLOADS', '../up' ); // Relative to WP_SITEURL
define( 'PRIVATE_DIR', $root_dir . '/private/' );


/*
 * Environment
 */
if ( ! defined( 'WP_ENV' ) ) {
	define( 'WP_ENV', 'production' );
}

switch ( WP_ENV ) {
    case 'development':
        define( 'SAVEQUERIES', true ); // Saves the database queries into $wpdb->queries for analysis
        define( 'WP_DEBUG', true ); // Allow error reporting
        break;
    default:
        ini_set('display_errors', 0); // Suppress error reporting
        define( 'WP_DEBUG_DISPLAY', false ); // Suppress error reporting
        define( 'SCRIPT_DEBUG', false ); // Be sure to load minified version of css and js files
        define( 'DISALLOW_FILE_MODS', true ); // Disable plugin and theme updates and installation

        if ( file_exists( ROOT_DIR . '/assets_versions.php' ) ) {
            include_once( ROOT_DIR . '/assets_versions.php' ); // Generated by gulp
        }
}


if ( ! defined( 'ABSPATH' ) ) {
    define( 'ABSPATH', PUBLIC_DIR . '/core/' );
}

require_once( ABSPATH . 'wp-settings.php' );
